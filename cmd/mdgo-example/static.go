// Code generated by github.com/shuLhan/share/lib/memfs DO NOT EDIT.

package main

import (
	"github.com/shuLhan/share/lib/memfs"
)

func generate__example() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example",
		Path:            "/",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetModTimeUnix(1617390184, 206584680)
	node.SetName("/")
	node.SetSize(0)
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/LICENSE", generate__example_LICENSE))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/custom.css", generate__example_custom_css))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/favicon.ico", generate__example_favicon_ico))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/html.tmpl", generate__example_html_tmpl))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/index.css", generate__example_index_css))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/index.html", generate__example_index_html))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/sub", generate__example_sub))
	node.AddChild(_mdgoFS_getNode(mdgoFS, "_internal", generate__internal))
	return node
}

func generate__example_LICENSE() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/LICENSE",
		Path:            "/LICENSE",
		ContentType:     "text/plain; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x94\x55\xC1\x8E\xDB\x36\x10\x3D\x97\x5F\xF1\x90\x53\x02\x28\x4E\x93\xDE\x36\x97\xD2\x12\xBD\x26\x2A\x8B\x2A\x49\xAD\xE3\xA3\xD6\xA2\x63\xA2\x96\x68\x50\xF4\x06\xF9\xFB\x82\x94\x37\x76\xBC\xDB\x16\x1D\xC0\xF0\xD8\x9C\x37\xF3\xDE\xE3\x08\xCA\xDD\xF1\xBB\xB7\x5F\xF7\x01\x9F\x7E\xFD\xF4\x31\xC3\x6A\x06\xB5\x3F\x1D\xF6\xED\x80\xB7\xFD\xF8\xFB\x5F\xF6\xD0\x3E\xDA\x30\xB3\xC3\xCE\xBD\x9B\x11\x7A\x38\x20\x55\x8F\xF0\x66\x34\xFE\xC9\x74\x33\x42\xA4\xE9\xEC\x18\xBC\x7D\x3C\x05\xEB\x06\xB4\x43\x87\xD3\x68\x60\x07\x8C\xEE\xE4\xB7\x26\xFD\xF3\x68\x87\xD6\x7F\xC7\xCE\xF9\x7E\xCC\xF0\xCD\x86\x3D\x9C\x4F\xDF\xEE\x14\x48\xEF\x3A\xBB\xB3\xDB\x36\x36\xC8\xD0\x7A\x83\xA3\xF1\xBD\x0D\xC1\x74\x38\x7A\xF7\x64\x3B\xD3\x21\xEC\xDB\x80\xB0\x37\xD8\xB9\xC3\xC1\x7D\xB3\xC3\x57\x6C\xDD\xD0\xD9\x08\x1A\x13\xA8\x37\xE1\x8E\x90\x8F\x33\xFC\x4C\x69\x84\xDB\x3D\x73\xD9\xBA\xCE\xA0\x3F\x8D\x01\xDE\x84\xD6\x0E\xA9\x61\xFB\xE8\x9E\xE2\xD1\xB3\x17\x83\x0B\x76\x6B\x32\x84\xBD\x1D\x09\x80\x83\x1D\x43\xEC\x71\x3D\x6E\xE8\x6E\xB8\x74\x76\xDC\x1E\x5A\xDB\x1B\x3F\x23\xE4\xD3\x4B\x0E\x76\xB8\x36\xE1\x99\xC3\xD1\xBB\xEE\xB4\x35\xFF\x46\x23\x32\x88\x4C\xFE\x2F\x0D\x9C\xD5\x75\x6E\x7B\xEA\xCD\x10\x92\xBB\xB1\x59\x3B\x74\x1F\x9C\x87\x0B\x7B\xE3\xD1\xB7\xC1\x78\xDB\x1E\xC6\x8B\xD1\xE9\x76\x12\xF2\x4A\xC0\x8C\x90\xDF\x66\xA8\x8C\x4D\xA8\x78\x3A\xB4\xBD\x99\xE8\x3C\x13\xDE\xBB\x43\x67\x3C\x06\x77\x29\x48\xDE\xDB\x30\x46\xD2\x53\x2F\xE7\x47\xF4\xED\xF7\x48\xE4\xD1\xC4\x4D\xE9\x10\x1C\xCC\xD0\x39\x3F\x9A\xB8\x14\x47\xEF\x7A\x17\x0C\x26\x6B\xC2\x88\xCE\x78\xFB\x64\x3A\xEC\xBC\xEB\x27\x27\x46\xB7\x0B\xDF\xE2\x8D\x3F\x2F\x10\x80\xF1\x68\xB6\x71\x89\x70\xF4\x36\xAE\x96\x8F\xEB\x33\x4C\x8B\x34\x8E\x93\x02\xBD\xE4\x0A\x4A\x2C\xF4\x9A\x4A\x06\xAE\x50\x4B\xF1\xC0\x0B\x56\x60\xBE\x81\x5E\x32\xE4\xA2\xDE\x48\x7E\xBF\xD4\x58\x8A\xB2\x60\x52\x81\x56\x05\x72\x51\x69\xC9\xE7\x8D\x16\x52\xE1\x0D\x55\xE0\xEA\x0D\x89\x07\xB4\xDA\x80\x7D\xA9\x25\x53\x0A\x42\x82\xAF\xEA\x92\xB3\x02\x6B\x2A\x25\xAD\x34\x67\x2A\x03\xAF\xF2\xB2\x29\x78\x75\x9F\x61\xDE\x68\x54\x42\xA3\xE4\x2B\xAE\x59\x01\x2D\xB2\x38\x94\xBC\x84\x41\x2C\xB0\x62\x32\x5F\xD2\x4A\xD3\x39\x2F\xB9\xDE\x24\x22\x0B\xAE\xAB\x38\x6B\x21\x24\x28\x6A\x2A\x35\xCF\x9B\x92\x4A\xD4\x8D\xAC\x85\x62\xA0\x92\x91\x82\xAB\xBC\xA4\x7C\xC5\x8A\x19\x78\x85\x4A\x80\x3D\xB0\x4A\x43\x2D\x69\x59\xFE\x83\x4A\x21\x7F\x16\x39\x67\x28\x39\x9D\x97\x8C\xA4\x51\xD5\x06\x05\x97\x2C\xD7\x51\xCF\x25\xCB\x79\xC1\x2A\x4D\xCB\x0C\xAA\x66\x39\x8F\x09\xFB\xC2\x56\x75\x49\xE5\x26\x3B\xF7\x54\xEC\xCF\x86\x55\x9A\xD3\x92\x14\x74\x45\xEF\x99\xC2\xDB\xFF\xF0\xA4\x96\x22\x6F\x24\x5B\x45\xD2\x62\x01\xD5\xCC\x95\xE6\xBA\xD1\x0C\xF7\x42\x14\x91\x2C\x51\x4C\x3E\xF0\x9C\xA9\xCF\x28\x85\x4A\x76\x35\x8A\x65\x28\xA8\xA6\x69\x70\x2D\xC5\x82\x6B\xF5\x39\xE6\xF3\x46\xF1\xE4\x1A\xAF\x34\x93\xB2\xA9\x35\x17\xD5\x3B\x2C\xC5\x9A\x3D\x30\x49\x72\xDA\x28\x56\x24\x7B\x45\x95\xA4\xEA\x25\x13\x72\x13\x9B\x46\x0F\x92\xFB\x19\xD6\x4B\xA6\x97\x4C\x46\x47\x93\x53\x34\x5A\xA0\xB4\xE4\xB9\xBE\x2A\x23\x42\x42\x0B\xA9\xAF\x34\xA2\x62\xF7\x25\xBF\x67\x55\xCE\x22\x1B\x11\xBB\xAC\xB9\x62\xEF\x40\x25\x57\xB1\x80\x4F\x63\xD7\x74\x03\xD1\x24\xC9\xF1\x92\x1A\xC5\x48\x4A\xAF\x56\x36\x4B\x57\x09\xBE\x00\x2D\x1E\x78\xA4\x7D\x2E\xAE\x85\x52\xFC\xBC\x28\xC9\xB2\x7C\x89\xC9\xEE\x19\x89\x0F\x47\x8A\xF7\xEF\xDF\x5F\x92\x1F\x3F\x5E\xCB\xCE\x05\x84\xFC\xA2\x35\x10\x3F\xE0\x1C\x98\xCF\xF1\x23\x28\xA5\x34\x25\x65\x8A\xA9\xE0\x8F\x73\x24\x5C\x82\xDD\xE2\x22\x28\x01\x23\x04\xCF\x38\x44\x68\x04\x4D\x98\x1B\xD0\x34\xE8\x07\xEA\x05\xE8\xD5\x49\xF4\x1C\x37\x0C\x2F\xA0\xD7\x64\x5D\x26\xBD\x4E\x0F\x13\x6A\x02\x4D\x71\x43\xEF\x76\x12\x59\x9B\xC7\xD1\x06\x73\x87\x7D\x08\xC7\xBB\x0F\x1F\xAE\x5F\xA9\x24\x77\x43\x68\xB7\xE1\x0E\x37\xEF\x5A\xF2\x77\x00\x00\x00\xFF\xFF\xB5\x81\xE4\xF0\x98\x07\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617178354, 559697087)
	node.SetName("LICENSE")
	node.SetSize(948)
	return node
}

func generate__example_custom_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/custom.css",
		Path:            "/custom.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\xCA\x30\x54\xA8\xE6\xE2\x4C\xCE\xCF\xC9\x2F\xB2\x52\x28\xCE\x4C\xCD\xCB\x4B\xB4\xE6\xAA\xE5\x02\x04\x00\x00\xFF\xFF\x1C\x35\x0D\x2C\x17\x00\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617178354, 563030421)
	node.SetName("custom.css")
	node.SetSize(47)
	return node
}

func generate__example_favicon_ico() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/favicon.ico",
		Path:            "/favicon.ico",
		ContentType:     "image/vnd.microsoft.icon",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\xEC\x98\x0D\x4C\x55\x65\x18\xC7\x1F\xE0\x1A\x04\x85\x18\x9A\x5D\x4B\xEF\x69\xA6\x32\xE7\xDC\x2C\x95\x73\x67\x26\xAE\x9A\xB9\xE4\x5C\xF5\x9E\x13\x73\xE8\x6E\xE9\x0C\xD4\xCC\x12\xB8\x88\x9A\x62\x69\xCD\xCD\x4F\x30\x44\xCA\x89\xB9\x34\x5D\x4D\x14\x9C\x6B\x6A\xDD\x0B\x9B\x29\x61\x1A\xF3\x13\xF9\xF4\x8A\x22\x2E\x94\xE0\xF2\xE1\x85\xF7\xDF\xDE\x73\x3F\x52\xEE\x65\x92\x0B\x5B\xDB\xFD\x6F\xCF\x38\xCF\x39\xCF\xFB\xFC\xDE\x8F\xE7\x39\x67\x5C\xA2\x00\x0A\x24\x41\xE0\x7F\x05\xFA\x2E\x82\x68\x38\x11\x45\x44\x70\x3F\x84\x12\xFB\x10\xFD\x16\x41\x14\x45\x44\x02\x11\xC5\x90\x33\xEE\x61\x92\x25\x11\xDC\x58\x8D\xB9\x57\xCD\xCD\xF1\xF3\xFD\x7C\x3F\xDF\xCF\xF7\xF3\xFF\x9F\xFC\x32\xEB\x7C\x9C\xCC\x9B\xAD\x5A\xD5\xC9\xC4\xC7\xCE\xBF\x51\x73\x06\x8E\x0E\xA8\x76\xAD\xEC\xF8\x63\xE3\xB7\x95\x27\xE1\x46\xC9\x22\x34\xDE\xAD\xF7\xF0\x6F\xD5\x5E\xC2\xF5\xE2\x85\xEA\xB3\xDE\xE4\x3B\x2A\x53\xB0\x3F\xE7\x5D\x6C\xCB\x5C\x89\x6D\xBB\x8E\x22\x67\xAF\x15\x5F\xED\x2B\x44\xE6\xD7\x79\xC8\xCA\x5C\x8E\xBC\x5D\xA6\x5E\xE5\xB7\x95\xA7\xC1\xBC\xD1\x82\xE4\x0D\x45\x3E\x6D\xE5\xE6\xA3\xFF\x2E\xFF\xDA\x0A\xB0\x86\x43\x40\xEB\x15\xA0\xDD\x06\xD8\xCF\x22\x77\xFF\x11\x95\x65\x9C\xBB\x0E\xAF\xE8\xA7\x62\xDC\xAB\xD3\x30\x6B\xE1\x16\xF5\x5E\x5E\xC1\x61\xE0\xCF\x22\xA0\xE9\x34\x58\xC3\x41\x30\xDB\xEA\x47\xE7\x5F\x5F\x0B\xDC\xAB\x43\x57\x31\x00\x25\xC5\x27\xA0\x13\x86\x7A\x6C\x44\xD4\x48\x54\x54\x5E\xF2\x8A\x45\x67\x33\x58\x5D\xF6\x23\xF1\xD1\x56\xE9\x9D\xEF\x3E\xE5\x6E\x37\x63\xDA\x94\xB1\x98\xF1\xF6\x38\xE4\xFF\x90\xD3\x7D\x60\x67\x2B\xD8\xF5\x75\x3D\xE1\x37\xF1\xFB\x6D\xE5\xC9\x60\x75\x5F\x7A\xA5\x69\x69\x69\x81\xE9\xBD\x79\x88\x1A\x39\x1A\x2B\x3E\x59\x0D\xE6\xB8\x03\x56\x93\x0A\x76\x73\xAB\x57\xEC\xF9\xF3\x17\x10\x33\xF9\x0D\x8C\x79\x79\x3C\xF2\x0B\x8E\x00\x8D\x56\x57\xFD\x24\xBB\xF9\x4D\x3E\xF8\x65\xFC\xD9\xED\x73\x4B\xC0\x1A\xF2\xBD\x72\x6E\xCF\xCE\x41\xBF\xC8\x81\x1E\xB3\x16\x16\x81\xD5\x7E\xEE\xAC\x8F\x2E\x9A\x3E\x43\xF6\xC4\xE9\x5E\x1C\x86\x0E\x7B\x85\xCA\xAF\x3F\xB7\x44\xE5\x1B\x25\xF1\x4A\x57\xBE\x62\x88\x3E\xC8\x9F\x15\x1F\x99\x07\x76\xA7\xC0\x2B\x67\x56\x56\xF6\x03\x7C\x8B\xC5\x0A\x56\xFB\x85\x4F\xBE\x61\xBA\xD1\x13\x37\x44\x78\x09\x8E\xE6\x72\x95\x7F\x3A\x7F\xAE\x7B\xFD\x87\x1E\x5C\xBB\x5E\x89\x9B\xA9\x6F\xDE\xB2\x46\xC2\xB5\xD3\x1F\x80\xD5\x6D\xF7\xCA\x69\xB7\xDB\x11\x3F\xDB\x84\x61\xC3\x47\xC2\x9C\x9A\x06\xE6\x68\x74\xED\x7F\xA6\x57\xEC\xEF\xA5\xA5\x98\x30\x31\x06\xA3\x46\x8F\x41\x5E\x1E\xEF\x89\x42\x95\x7F\xD9\x92\x88\x65\x8B\xDF\xE4\xFC\x36\xD9\xA0\x4F\x50\xD9\xD3\xF4\xAF\xC7\x4D\xD7\xB3\xD2\x63\xEF\xE3\x8F\xD2\x8F\xD0\x51\x65\x46\x67\x35\xAF\xBF\x6A\x1F\xC5\xF4\xB7\xF8\x19\x79\x6A\x95\xF7\x67\x77\xEA\x6C\x73\x9E\x93\x2B\xB6\xF5\x6A\x12\xBE\xD9\x2A\xAB\xFB\xA0\x18\xC4\x38\x45\x12\x8F\x7D\x6A\x9E\x8A\xA6\xCB\x49\xD8\xB9\xD1\x88\x9D\x9B\x66\xA2\xA5\x2C\x09\x9D\x36\xDE\x7F\xF5\xBE\x73\x36\xFF\xEA\x5C\xBB\xBB\xAF\x6C\x6B\x7C\xCF\xB7\xB3\x05\xEC\x56\x0E\x58\xB5\x19\x17\x7F\x4A\x40\xF6\xFA\x19\x38\xB4\x6B\x16\xEC\x57\x92\x9C\x7C\x49\x3C\x27\x1B\xC4\xEA\x45\x73\x63\x70\xAF\x32\x19\xED\x15\x29\x9E\x73\xCA\xF8\x4C\x82\xFD\x6A\x9A\xB3\x16\x5A\x2B\x80\xF6\x5A\xC0\x5E\x0A\x56\x9F\xDB\xCD\xBB\x2D\x15\xEC\xF6\x1E\xA0\xE9\x17\xA0\xB9\xC4\xB9\x3F\xB6\x74\x95\xB5\x7B\xAB\x8C\x5B\x67\x3F\x54\xD7\xCE\xF7\xF8\x6A\xD1\x02\x77\x1D\xD8\x15\x29\xDA\xCA\xAF\x57\x2D\x9D\x82\xC3\xB9\xF1\xD8\xB0\x2A\xD6\xD3\xA3\x89\xA6\x49\xB0\x7C\x6F\x42\x3B\xEF\xC9\x7F\xF8\x9D\xE7\xBD\xC6\xC7\x26\x98\x26\xA9\xB9\xE6\x28\x13\xB0\x27\x43\xC1\x81\x1D\x71\x98\x3F\xE7\x35\x67\x1F\xC4\x8A\x17\xF9\xF9\xCB\x92\xD8\xE1\x66\x7A\xCC\x20\xDA\xDC\xD7\xA6\xB8\x09\xC8\x58\x6B\x40\xC1\xEE\x78\x9C\x3F\x91\x80\x9B\x67\x16\xA3\xF1\xE2\xC7\xEA\x9E\x71\xE3\xD7\xFC\x1E\x7F\xC6\x63\x78\x2C\x1F\xE3\x1E\xAF\x48\xFA\x72\xAF\xFC\x92\xC8\xF8\xF9\xAB\x35\x68\x18\x3F\x51\x36\xE8\x7F\x94\x25\xB1\x52\x91\xC4\x62\x45\x12\x17\x10\x51\xA0\x31\x56\x3F\xCB\x28\x89\x55\x3E\xC6\xF6\xC8\x8C\x92\x58\x6E\x8C\x15\xDF\xE1\xFF\x02\xCB\x92\x18\x2F\x4B\x62\x91\x2B\x9F\x45\x8E\x15\xA7\x76\x7D\x07\xF8\x92\xA2\x28\x41\x33\xA5\xE8\xC9\xB2\x41\xCC\x90\x0D\xE2\x71\x3E\x47\x59\x12\x1B\x5C\xE6\x66\x35\xBA\x7C\x9B\x33\x26\x7A\x33\x5F\x53\x7A\x3A\x05\xF6\x84\xF1\x5F\xCA\x42\x14\xD4\x5B\x96\x4E\x14\xE0\x8B\xC9\xEF\x83\x48\x6D\xD1\x28\x22\x8A\x70\xFD\x56\x11\x40\x21\xDD\xCE\xB3\x5F\xE4\x40\xD2\x09\x43\x69\xF4\xA8\x11\x14\x27\x8D\xE1\xDF\x0B\x4A\x99\x1F\x4D\xCB\x12\xC7\xD2\x8A\x24\x89\x0E\x64\xBC\x45\xDF\x66\xC8\x94\xBC\xA1\x88\x4E\xED\x93\x68\xD3\x8E\xBD\xB4\x77\xCF\x7A\x3A\x95\xBF\x94\x0A\x0F\x2F\xA7\xB3\xC7\xD2\xA8\xF8\xE7\xCD\x54\x62\xCD\xA2\xA6\x0B\xC9\x84\x8A\x54\x42\x15\xB7\x65\x84\x9A\x14\x42\x75\x1A\xB1\x1A\x33\xDD\xAC\x29\x25\x7B\x8B\x83\x5A\xEF\x81\x1C\x1D\x20\x07\x03\x9F\x68\x6F\x1E\x81\x5F\x7E\xF9\xF5\x10\x09\x1A\xED\x7D\xD2\x08\xBD\xE4\x47\xF4\xD5\x0E\xE8\xDF\xDF\xED\x3F\x17\x3A\x78\x70\xA8\xD6\xED\x0F\xD0\x6A\x9F\x0E\x0D\x7D\x4A\x3B\xF0\x59\xA7\x1F\xA9\xD3\x85\x07\x04\x84\xEB\x74\x91\x4E\x7F\xD0\x10\x0A\xD4\x6A\x07\x0D\xA6\x40\xAD\x46\xD0\x3C\x11\x36\x48\xA7\xFA\x3A\x0A\x0C\xEB\xA3\xD1\x84\x85\x84\x3F\xFF\x42\xB8\x56\x1B\xAE\xD3\x85\x87\x84\x69\x04\x4D\x70\x48\x58\x18\x47\x3E\xD3\xEF\xC9\x60\x8D\xC0\x15\x1C\x1C\xA4\xD1\x04\x05\x07\x0B\x3E\x94\x1E\x40\xD4\x53\x73\x8B\x5F\xDF\xED\xCB\x5F\xB4\x44\x7F\x05\x00\x00\xFF\xFF\xF7\x87\x31\xC7\x36\x16\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617178354, 563030421)
	node.SetName("favicon.ico")
	node.SetSize(1316)
	return node
}

func generate__example_html_tmpl() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/html.tmpl",
		Path:            "/html.tmpl",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x53\x4F\x8F\xDB\x2E\x10\x3D\x67\x3F\x05\xCB\xEF\xFA\xC3\xA8\xAA\xAA\x56\x2D\x44\xEA\x6E\xF7\xDC\x95\x92\x4B\x4F\x15\x31\x93\x80\x8A\xC1\x0B\xE3\x64\x2D\xCB\xFD\xEC\x15\xC6\x49\xDD\x74\xA5\xED\xC9\x30\x6F\xDE\x7B\xF3\xC7\x88\xDB\x2F\x5F\xEF\xB7\xDF\x1E\x1F\x88\xC1\xC6\xAD\x6F\x44\xF9\xAC\x84\x01\xA5\xD7\x37\xAB\x95\x68\x00\x15\x31\x88\x2D\x83\xA7\xCE\x1E\x25\xBD\x0F\x1E\xC1\x23\xDB\xF6\x2D\x50\x52\x97\x9B\xA4\x08\xCF\xC8\x33\xFB\x13\xA9\x8D\x8A\x09\x50\x76\xB8\x67\x1F\x28\xE1\xBF\x75\xBC\x6A\x40\xD2\xA3\x85\x53\x1B\x22\x2E\xD8\x27\xAB\xD1\x48\x0D\x47\x5B\x03\x9B\x2E\xFF\x13\xEB\x2D\x5A\xE5\x58\xAA\x95\x03\xF9\xE6\x05\x21\x34\xD0\x00\xAB\x83\x0B\x71\xA1\xF5\xDF\xDB\xF7\xEF\x1E\x3E\xDF\x4D\xF9\x99\x80\x16\x1D\xAC\x87\xA1\xDA\xE6\xC3\x38\x0A\x5E\x22\x19\x73\xD6\xFF\x20\x11\x9C\xA4\x09\x7B\x07\xC9\x00\x20\x25\x26\xC2\x5E\x52\x6E\xBD\x86\xE7\xAA\x4E\x69\xB6\x1E\x06\x46\xA2\xF2\x07\x20\xD5\x66\xCA\x1E\xC7\xD7\x34\x86\xA1\x1A\xC7\x05\x1D\xBC\xCE\x24\xC1\xE7\xF9\x8A\x5D\xD0\xFD\x54\x89\xB6\x47\x52\x3B\x95\x92\xA4\x18\xDA\x9D\x8A\x34\x87\xFF\x88\xE7\x0E\x95\xF5\x30\x43\xD7\x1C\x96\x35\xAD\x3F\xCC\xE8\x4A\xA8\x73\x23\x74\xDD\xE8\x43\x10\x5C\xCD\x3C\xAE\xED\xF1\x6F\x89\x06\x7C\x77\xE1\xEE\x43\x6C\xCE\x80\x45\x68\x28\x51\x35\xDA\xE0\x25\xE5\xDF\xAD\x47\x88\x5E\x39\x9E\x40\xC5\xDA\x9C\x39\x2B\x61\x7D\xDB\x21\xC1\xBE\x85\xF2\x3F\xD0\x79\x4F\x4F\x94\xB4\x4E\xD5\x60\x82\xD3\x10\x25\xDD\x14\x5E\x19\xCB\x54\x50\xB6\xFB\xF7\xE2\x2E\x8D\xA5\x6E\x47\xD7\x9B\x6E\xF7\x42\x6B\x97\xD3\x7C\xB8\x9A\x71\xAB\x0E\xF0\xFA\x84\x87\xA1\xBA\x0B\xBA\x9F\xF6\xBC\xD4\xBE\x65\x8C\x54\x97\x64\xC2\xD8\xC2\xE8\x0C\x67\x87\x09\xB9\x72\xDE\x87\x80\x67\x83\xC7\x70\x82\x08\x9A\xEC\x7A\x22\xD4\xE4\x58\x1A\xCB\xEF\x2D\x7D\xE4\x3C\xC5\xCA\x20\xFF\x99\x4C\xE7\x8C\xF2\x3C\x6F\x91\xE6\xB4\x52\x5D\xBE\x96\xC2\xD4\xD2\x5F\xF0\xF2\x53\x09\x5E\x1E\xF3\xAF\x00\x00\x00\xFF\xFF\x1D\x36\xA3\xA2\xE4\x03\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617179774, 969745297)
	node.SetName("html.tmpl")
	node.SetSize(482)
	return node
}

func generate__example_index_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/index.css",
		Path:            "/index.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x94\x55\x5D\x8F\xAB\x36\x14\x7C\x8E\x7F\xC5\x91\x56\x7D\x89\x80\x05\xB2\x24\x2D\x48\x2B\x55\x7D\xEE\x8F\x30\xF8\x10\xAC\x35\x36\x32\xA6\xC9\xF6\x2A\xFF\xFD\xCA\x60\xBE\x02\xB9\xD2\x15\x0F\x89\xEC\xB1\xCF\x78\xE6\x78\x9C\x2B\xF6\x0D\x3F\xC8\xA1\xA6\xFA\xCA\x65\x0A\x61\x46\x0E\xA5\x92\xC6\x2F\x69\xCD\xC5\x77\x0A\x7F\x6B\x4E\x85\x07\x2D\x95\xAD\xDF\xA2\xE6\x65\x46\x0E\x39\x2D\xBE\xAE\x5A\x75\x92\xF9\x85\x12\x4A\xA7\xF0\x56\x96\x76\x42\x70\x89\x7E\x85\xFC\x5A\x99\x14\xA2\xE0\x94\x91\x83\xC1\xBB\xF1\xA9\xE0\x57\x99\x42\x81\xD2\xA0\xCE\xC8\x61\x5C\x15\xC7\x71\x46\x1E\xA4\xD1\x68\x39\xAC\xEA\xFE\x8B\x52\x28\x0F\x6A\x25\x55\xDB\xD0\x02\x47\x5E\x2D\xFF\x1F\x53\x08\x83\x3F\x2F\x89\xC6\x7A\x5B\xF3\x23\x23\x07\xF5\x1F\xEA\x52\xA8\x9B\x7F\x4F\x81\x76\x46\xAD\x28\xA7\xF0\x86\xA5\xFD\x32\x72\x68\x28\x63\x5C\x5E\xED\x7E\xE7\xD8\xED\x97\x2B\xCD\x50\xFB\x9A\x32\xDE\xB5\x76\xE6\x14\xB9\xA9\x07\xA1\x96\xE6\x48\xFE\x74\x49\x90\xE6\xE3\x11\x19\x16\x4A\x53\xC3\x95\x4C\x41\x2A\x89\x3D\x3C\xAD\x2C\x15\xBB\x68\x83\xE9\x24\x43\x6D\xB9\x5B\x20\x69\x3C\x22\xF8\xE0\xC3\xDD\xBF\x71\x66\xAA\x14\x92\x70\x20\x74\x53\x9A\xF9\x37\x4D\x9B\x14\x72\x8D\xF4\xCB\xB7\x03\xBD\x6C\x9E\x55\xCE\x23\x9D\xF0\x88\x12\x4B\x17\xA3\x60\xA2\x4C\xAA\xC8\x23\x55\xEC\x91\xEA\xE4\x91\xEA\x63\x07\x05\xE1\x8C\x5F\x28\x92\xED\x9C\xB4\x77\xE0\xE6\xB4\xCE\x95\xE8\x69\x54\xD1\x64\xDE\x60\x4E\x14\xEC\x7B\xE3\xC0\x41\xAF\x45\xDD\x19\x64\x4B\x39\x2F\x97\x4B\x0F\x88\xFB\x41\x81\x54\xA7\xA0\xED\xCA\xEC\x69\xF3\xC9\xA8\x95\xA5\x21\xE6\x65\xB2\xB6\x74\xBF\x41\xE2\xE4\xF9\x20\x52\xE9\x9A\x8A\x45\xDF\x4C\x5D\x33\x35\xD2\x9E\xFC\x55\x0C\x74\x3A\xF9\x46\x94\xD3\x46\x94\xF8\x17\x7C\x7E\xB3\xF2\x6B\x2B\x97\xDD\x3A\x40\x96\x1C\xA6\x9E\x88\xE1\x13\xDA\x86\x4A\xDB\x16\xEE\x6F\x8F\x15\x8A\x9A\x59\xF6\x29\x14\x20\x4E\x9A\x3B\x84\x73\x3A\x6C\xA4\x1B\x5D\x4C\xE2\xCB\x5F\x45\x6F\x24\x61\xAF\x5A\x92\xB1\x55\xE2\xF4\xDF\x72\x5A\x78\x0E\xB2\x7B\xE1\x1F\x84\xBC\x1F\x8F\x04\x8E\xF0\x4F\xD7\x1A\x55\x43\x21\x68\xDB\x62\x0B\xA5\xD2\xD0\xD0\x2B\xB6\x04\x8E\xEF\x84\x04\x46\x35\x39\xED\x2F\xDF\x7E\xA7\x8C\x16\x7C\x0C\xB6\xCC\x16\x54\x9C\x31\x94\x7D\xA5\x71\x13\xFB\xEB\x57\x48\x6D\x6B\x79\xF3\x68\x8D\xB2\xB3\x05\xA6\xA6\x8B\x82\x53\x74\xEA\x8D\x78\xD5\xB5\xBB\xF2\xBD\xA8\xB4\xB0\x44\x60\x69\x2C\x6E\x17\xB6\x8A\xA5\x3E\x53\x5F\x67\xD2\x96\xFC\xDA\xF4\xC7\x13\x80\xAE\xBC\x72\x31\x09\x61\x10\x6D\x13\x63\xCE\x50\xC7\xE5\x56\x71\x83\xCF\x37\x75\x0A\x93\x21\x68\xED\xBA\xD0\xED\xDA\x2A\xC1\xD9\x06\x31\x45\x71\xD2\xDC\xB7\xFC\x4A\xA5\xEB\x99\xA2\x6F\x75\x5A\x52\x79\x90\xC0\xF6\x84\x45\xB8\x58\x8D\xC2\xF0\x8F\x41\x88\x7E\xE2\x13\x82\x42\x49\x43\xB9\x44\x3D\x3B\xBB\x1C\x9D\xE2\xDB\xBD\x62\x83\x15\xEB\x82\xEE\xD6\xBA\x31\x3D\xB8\xEB\x06\x67\x81\x56\xB9\xBC\x28\x10\xD4\x68\xE6\x28\x69\xCD\xB7\xC0\x14\xB8\xA1\x82\x17\xD9\x7E\xA8\x07\xA5\x52\x66\x4B\x6D\xF3\xC0\x9E\xCF\xE7\x97\x0F\xE7\xB8\x6F\x1C\x24\xAE\x63\x1F\xE4\x67\x00\x00\x00\xFF\xFF\x2F\x17\x7F\x31\x0F\x08\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617178354, 563030421)
	node.SetName("index.css")
	node.SetSize(739)
	return node
}

func generate__example_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/index.html",
		Path:            "/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x55\x6D\x8B\xDB\x46\x10\xFE\x6C\xFF\x8A\xA9\x0A\xFD\x64\x79\x93\x94\x90\xC6\x91\xDC\x97\x4B\x9A\x16\x52\x1A\xB8\x83\x52\x42\x28\xA3\xDD\xB1\x76\xB9\xD5\x8E\x6E\x77\x64\xC7\x94\xF6\xB7\x97\x95\x2C\xF7\xE2\x5E\xE1\x3E\x69\x5E\xF4\xCC\x3C\x7A\x76\x66\x55\x7D\xF1\xFA\xD7\xAB\x9B\xDF\xDF\xBF\x01\x2B\x9D\xDF\x2E\xAB\xE9\xB1\xA8\x2C\xA1\xD9\x2E\x17\x8B\xAA\x23\x41\xB0\x22\x7D\x49\x77\x83\xDB\xD7\xC5\x15\x07\xA1\x20\xE5\xCD\xB1\xA7\x02\xF4\xE4\xD5\x85\xD0\x27\x51\x19\xFD\x0A\xB4\xC5\x98\x48\xEA\x41\x76\xE5\x37\x05\xA8\x7F\xEB\x04\xEC\xA8\x2E\xF6\x8E\x0E\x3D\x47\xB9\x87\x3E\x38\x23\xB6\x36\xB4\x77\x9A\xCA\xD1\x59\x81\x0B\x4E\x1C\xFA\x32\x69\xF4\x54\x3F\x7D\xA0\x90\x58\xEA\xA8\xD4\xEC\x39\xDE\xAB\xF5\xE5\xD7\x2F\x9E\xBF\xF9\xFE\x87\xF1\xFD\x0C\x10\x27\x9E\xB6\x95\x9A\x9E\x39\xE2\x5D\xB8\x85\x48\xBE\x2E\x92\x1C\x3D\x25\x4B\x24\x05\xD8\x48\xBB\xBA\x50\x2E\x18\xFA\xB4\xD6\x29\x4D\x0D\x2B\x75\x92\xA2\x6A\xD8\x1C\x47\xB8\x71\x7B\xD0\x1E\x53\xAA\x0B\xE1\xBE\xC1\x58\xE4\xF0\x67\xF1\x4C\x06\x5D\xA0\x53\xEA\x12\x53\xE6\x9A\x2E\xB4\xA7\xEC\xA2\xC2\xB9\x7B\xB1\xED\x4C\xCB\x95\xC2\x13\x4E\x19\xB7\xFF\x6F\x89\x8E\xC2\x70\xC6\xEE\x38\x76\x73\xC2\x09\x75\x05\xA0\x16\xC7\xA1\x2E\xD4\x1F\x2E\x08\xC5\x80\x5E\x25\xC2\xA8\xED\x8C\x59\x54\x2E\xF4\x83\x80\x1C\x7B\x9A\x8E\xAE\x38\x49\x7A\x57\x40\xEF\x51\x93\x65\x6F\x28\xD6\xC5\xF5\x84\x9B\xB4\x1F\x09\xE5\x76\x8F\x27\x77\xFE\xB0\x34\x34\xC5\xF6\x7A\x68\x1E\xF8\xB4\xB3\x75\x32\x2E\x34\xEE\xB1\xA5\x47\x28\xDC\x6F\x6B\x80\xDF\xC8\x6B\xEE\x08\x84\x21\xEB\xB8\xBC\xB6\x83\xB7\x18\xE0\xCC\xA3\x43\xE7\x85\x37\x5D\xFA\xEE\xD6\x79\x6C\x9C\xAC\x5D\xD8\x71\xB1\xBD\x08\x8C\x2C\x9F\x3D\x87\x6B\xEA\x85\xBA\x86\x22\x3C\x7B\xF2\xF4\xE5\x72\x33\x44\x5F\xB6\x6C\x58\x6F\xC6\x9D\x48\x1B\xA5\xFA\xDB\x76\xDD\xF2\xDA\xD0\x5E\xB5\x4E\xD6\x29\xAE\xAD\xA8\xBF\xD3\xD4\x58\x4D\xA7\xD9\x6F\x97\x55\xBF\x75\x1D\xB6\xB4\x99\x71\xAE\x6B\xD7\xC9\x3A\xF2\x26\xAD\x1D\xAB\x06\x4D\x4B\x6A\x2A\x54\x46\xDA\x51\xA4\xA0\xA9\x7C\xF2\xE4\x85\x79\xA9\xBF\xF5\xDC\x72\xDD\xF2\x57\xD8\xF5\xAF\xB2\x7D\x95\x67\xBE\x3E\x58\x27\x34\xC6\xC6\x39\xAE\x77\x1E\xA5\x4C\x77\x03\x46\xFA\xF0\x96\x5F\xB3\x5E\x41\x1E\xF5\xFA\xCF\x33\xED\xBF\x3E\xCE\x64\x2A\xCD\x86\x4E\xC3\x36\x9A\xE0\x12\x20\x78\xD7\x44\x8C\x47\xC0\x60\x00\xA1\x8F\xDC\x46\xEC\xB2\x9C\x87\xE8\x84\x20\x09\x8A\xD3\x70\xA0\x06\x12\xC5\x3D\x45\x38\x38\xB1\x90\x25\x32\x86\xCC\x72\xE7\x3C\x25\x18\x92\x0B\x2D\x74\x18\x6F\x0D\x1F\xC2\x68\x0C\x3D\xE4\xC1\x41\x59\xCF\x04\xEA\x1A\xC6\x33\x02\x4C\x73\xD7\x39\xF5\x23\x47\xC0\x00\x43\x9F\x1B\x1B\x14\x02\xC3\x7A\xE8\x28\xE4\xEE\x1C\x80\x77\x60\xF9\x90\x93\x43\x22\x10\x4B\x67\xDA\x89\x46\x7F\xF9\xF8\xC3\xF9\xF0\x96\x2F\xAA\xE7\x79\xFB\xF8\x20\xCD\xAB\x77\x3F\xFF\xBF\x7C\x53\x1E\x34\x86\x7C\x15\xED\x29\xCA\x0A\x5A\x0A\x14\x51\x68\x95\xF5\x54\x1C\x27\xD1\x00\xC1\xB8\x48\x5A\x38\x1E\x41\x2C\x0A\x9C\x86\x39\x2D\x67\xA9\xB2\x8C\xAB\x5C\xF2\xA7\x9B\x5F\xDE\x4D\xEE\xC4\xE8\xB3\x7D\x59\x2C\xEF\x39\x97\x6B\xB3\x63\x96\x79\x3B\xDE\xF3\x81\x22\x19\x68\x8E\x50\xE1\xB8\x2E\xD3\x36\xCC\x32\x3D\xA0\x4B\x91\x5F\x9B\x56\x6B\xDC\xA4\xB1\x2F\xDE\xDB\xD2\x45\xA5\xA6\x1B\xB1\x52\xD3\x4F\xE3\x9F\x00\x00\x00\xFF\xFF\x23\x51\x10\x0B\x4C\x06\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1633887216, 693676824)
	node.SetName("index.html")
	node.SetSize(795)
	return node
}

func generate__example_sub() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/sub",
		Path:            "/sub",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetModTimeUnix(1617390195, 149583962)
	node.SetName("sub")
	node.SetSize(0)
	node.AddChild(_mdgoFS_getNode(mdgoFS, "/sub/index.html", generate__example_sub_index_html))
	return node
}

func generate__example_sub_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/sub/index.html",
		Path:            "/sub/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x54\x4F\x73\xD3\x3E\x10\x3D\x3B\x9F\x62\x7F\xFA\x5D\x71\x54\x0A\x0C\x4C\x90\x3D\x94\xD2\x2B\x74\x26\xBD\x70\x62\x64\x79\x13\x69\xD0\x1F\x57\x5A\xA7\xCD\x85\xCF\xCE\xC8\x72\xD2\xB4\xE4\xD0\x93\xB5\x2B\xBD\xB7\x6F\x9F\x56\x16\xFF\x7D\xFB\x71\x7D\xF7\xF3\xF6\x06\x34\x39\xDB\x2E\x44\xF9\x54\x42\xA3\xEC\xDB\x45\x55\x09\x87\x24\x41\x13\x0D\x35\xDE\x8F\x66\xD7\xB0\xEB\xE0\x09\x3D\xD5\x77\xFB\x01\x19\xA8\x12\x35\x8C\xF0\x91\x78\x46\x7F\x06\xA5\x65\x4C\x48\xCD\x48\x9B\xFA\x13\x03\xFE\xC4\xE3\xA5\xC3\x86\xED\x0C\x3E\x0C\x21\xD2\x09\xFA\xC1\xF4\xA4\x9B\x1E\x77\x46\x61\x3D\x05\x6F\xC0\x78\x43\x46\xDA\x3A\x29\x69\xB1\x79\x7B\x86\x88\x34\x3A\xAC\x55\xB0\x21\x9E\x70\xFD\xFF\xEE\xE3\x87\x9B\xAB\xAF\xD3\xF9\x0C\x20\x43\x16\x5B\xC1\xCB\x37\x67\xAC\xF1\xBF\x21\xA2\x6D\x58\xA2\xBD\xC5\xA4\x11\x89\x81\x8E\xB8\x69\x18\x37\xBE\xC7\xC7\xA5\x4A\xA9\x14\x14\x7C\xB6\x42\x74\xA1\xDF\x4F\xF0\xDE\xEC\x40\x59\x99\x52\xC3\x28\x0C\x9D\x8C\x2C\xA7\x9F\xE5\xB3\x18\x69\x3C\xCE\x5B\x2F\x31\x75\xE6\x34\x7E\x3B\xEF\x56\x42\x1E\xAA\xB3\xD6\xF5\xDB\x20\xB8\x9C\x71\xBC\x37\xBB\x7F\x29\x1C\xFA\xF1\x88\xDD\x84\xE8\x0E\x1B\x86\xD0\x31\x90\x8A\x4C\xF0\x0D\xE3\xBF\x8C\x27\x8C\x5E\x5A\x9E\x50\x46\xA5\x0F\x98\x4A\x18\x3F\x8C\x04\xB4\x1F\xB0\x5C\x1D\x9B\x2D\xBD\x67\x30\x58\xA9\x50\x07\xDB\x63\x6C\xD8\xBA\xE0\x8A\xF7\x93\xA0\x5C\xEE\xF5\xE2\x8E\x8D\xA5\xB1\x63\xED\x7A\xEC\xCE\xB4\x76\x5C\xCD\x8B\x17\x1E\x0F\x72\x8B\xAF\x70\x78\x68\x1B\x58\x8F\x1D\xF4\x26\xA2\xA2\x10\xF7\x8B\x35\xAA\xE0\x7B\xB8\x1A\x49\x87\x08\x47\x29\x4E\x1A\x4B\x61\xE5\x96\x49\x8F\x56\x4B\xFF\x65\x9B\x33\x4B\x15\x1C\x6B\xCF\x24\x27\xC1\x97\xEF\xE1\x7B\xD8\xA1\xEB\x30\xC2\xE5\xC5\xE5\xC5\x62\xF5\x34\x39\x2B\xE0\x6A\x4C\x14\x5C\x1E\x1A\xC1\x87\x76\x21\x86\xF6\x4E\x9B\x04\x26\x81\xF4\x80\x8F\xD2\x0D\x16\x21\x6C\x0E\x33\x0A\xC6\x43\x3A\x95\x0A\x63\x32\x7E\x0B\x85\x06\x9E\xA8\x97\x13\xDD\x33\x8F\xAA\xC5\x49\xF0\xD2\xAA\x4D\x08\x74\x70\xE4\x36\x3C\x60\xC4\x1E\xBA\x3D\x08\x39\x59\x54\xDA\xCF\x6F\x39\xAD\x38\x4F\x71\xA9\x89\xFF\x99\xFB\xE5\x79\xEC\x58\x3E\x56\xEC\xCC\x61\xA9\x2B\x4F\x6E\xA6\x12\xBC\xBC\x02\xC1\xCB\x8F\xE2\x6F\x00\x00\x00\xFF\xFF\xAE\x23\x56\x3A\x40\x04\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1633887216, 693676824)
	node.SetName("index.html")
	node.SetSize(542)
	return node
}

func generate__internal() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_internal",
		Path:            "_internal",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147483648)
	node.SetModTimeUnix(-62135596800, 0)
	node.SetName("_internal")
	node.SetSize(0)
	node.AddChild(_mdgoFS_getNode(mdgoFS, "_internal/.template", generate__internal__template))
	return node
}

func generate__internal__template() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/html.tmpl",
		Path:            "_internal/.template",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		Content:         []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x53\x4F\x8F\xDB\x2E\x10\x3D\x67\x3F\x05\xCB\xEF\xFA\xC3\xA8\xAA\xAA\x56\x2D\x44\xEA\x6E\xF7\xDC\x95\x92\x4B\x4F\x15\x31\x93\x80\x8A\xC1\x0B\xE3\x64\x2D\xCB\xFD\xEC\x15\xC6\x49\xDD\x74\xA5\xED\xC9\x30\x6F\xDE\x7B\xF3\xC7\x88\xDB\x2F\x5F\xEF\xB7\xDF\x1E\x1F\x88\xC1\xC6\xAD\x6F\x44\xF9\xAC\x84\x01\xA5\xD7\x37\xAB\x95\x68\x00\x15\x31\x88\x2D\x83\xA7\xCE\x1E\x25\xBD\x0F\x1E\xC1\x23\xDB\xF6\x2D\x50\x52\x97\x9B\xA4\x08\xCF\xC8\x33\xFB\x13\xA9\x8D\x8A\x09\x50\x76\xB8\x67\x1F\x28\xE1\xBF\x75\xBC\x6A\x40\xD2\xA3\x85\x53\x1B\x22\x2E\xD8\x27\xAB\xD1\x48\x0D\x47\x5B\x03\x9B\x2E\xFF\x13\xEB\x2D\x5A\xE5\x58\xAA\x95\x03\xF9\xE6\x05\x21\x34\xD0\x00\xAB\x83\x0B\x71\xA1\xF5\xDF\xDB\xF7\xEF\x1E\x3E\xDF\x4D\xF9\x99\x80\x16\x1D\xAC\x87\xA1\xDA\xE6\xC3\x38\x0A\x5E\x22\x19\x73\xD6\xFF\x20\x11\x9C\xA4\x09\x7B\x07\xC9\x00\x20\x25\x26\xC2\x5E\x52\x6E\xBD\x86\xE7\xAA\x4E\x69\xB6\x1E\x06\x46\xA2\xF2\x07\x20\xD5\x66\xCA\x1E\xC7\xD7\x34\x86\xA1\x1A\xC7\x05\x1D\xBC\xCE\x24\xC1\xE7\xF9\x8A\x5D\xD0\xFD\x54\x89\xB6\x47\x52\x3B\x95\x92\xA4\x18\xDA\x9D\x8A\x34\x87\xFF\x88\xE7\x0E\x95\xF5\x30\x43\xD7\x1C\x96\x35\xAD\x3F\xCC\xE8\x4A\xA8\x73\x23\x74\xDD\xE8\x43\x10\x5C\xCD\x3C\xAE\xED\xF1\x6F\x89\x06\x7C\x77\xE1\xEE\x43\x6C\xCE\x80\x45\x68\x28\x51\x35\xDA\xE0\x25\xE5\xDF\xAD\x47\x88\x5E\x39\x9E\x40\xC5\xDA\x9C\x39\x2B\x61\x7D\xDB\x21\xC1\xBE\x85\xF2\x3F\xD0\x79\x4F\x4F\x94\xB4\x4E\xD5\x60\x82\xD3\x10\x25\xDD\x14\x5E\x19\xCB\x54\x50\xB6\xFB\xF7\xE2\x2E\x8D\xA5\x6E\x47\xD7\x9B\x6E\xF7\x42\x6B\x97\xD3\x7C\xB8\x9A\x71\xAB\x0E\xF0\xFA\x84\x87\xA1\xBA\x0B\xBA\x9F\xF6\xBC\xD4\xBE\x65\x8C\x54\x97\x64\xC2\xD8\xC2\xE8\x0C\x67\x87\x09\xB9\x72\xDE\x87\x80\x67\x83\xC7\x70\x82\x08\x9A\xEC\x7A\x22\xD4\xE4\x58\x1A\xCB\xEF\x2D\x7D\xE4\x3C\xC5\xCA\x20\xFF\x99\x4C\xE7\x8C\xF2\x3C\x6F\x91\xE6\xB4\x52\x5D\xBE\x96\xC2\xD4\xD2\x5F\xF0\xF2\x53\x09\x5E\x1E\xF3\xAF\x00\x00\x00\xFF\xFF\x1D\x36\xA3\xA2\xE4\x03\x00\x00"),
	}
	node.SetMode(420)
	node.SetModTimeUnix(1617179774, 969745297)
	node.SetName(".template")
	node.SetSize(482)
	return node
}

//
// _mdgoFS_getNode is internal function to minimize duplicate node
// created on Node.AddChild() and on generatedPathNode.Set().
//
func _mdgoFS_getNode(mfs *memfs.MemFS, path string, fn func() *memfs.Node) (node *memfs.Node) {
	node = mfs.PathNodes.Get(path)
	if node != nil {
		return node
	}
	return fn()
}

func init() {
	mdgoFS = &memfs.MemFS{
		PathNodes: memfs.NewPathNode(),
		Opts: &memfs.Options{
			Root: "_example",
			MaxFileSize: 5242880,
			Includes: []string{
			},
			Excludes: []string{
				`.*\.git`,
				`.*\.md$`,
				`^\..*`,
			},
		},
	}
	mdgoFS.PathNodes.Set("/",
		_mdgoFS_getNode(mdgoFS, "/", generate__example))
	mdgoFS.PathNodes.Set("/LICENSE",
		_mdgoFS_getNode(mdgoFS, "/LICENSE", generate__example_LICENSE))
	mdgoFS.PathNodes.Set("/custom.css",
		_mdgoFS_getNode(mdgoFS, "/custom.css", generate__example_custom_css))
	mdgoFS.PathNodes.Set("/favicon.ico",
		_mdgoFS_getNode(mdgoFS, "/favicon.ico", generate__example_favicon_ico))
	mdgoFS.PathNodes.Set("/html.tmpl",
		_mdgoFS_getNode(mdgoFS, "/html.tmpl", generate__example_html_tmpl))
	mdgoFS.PathNodes.Set("/index.css",
		_mdgoFS_getNode(mdgoFS, "/index.css", generate__example_index_css))
	mdgoFS.PathNodes.Set("/index.html",
		_mdgoFS_getNode(mdgoFS, "/index.html", generate__example_index_html))
	mdgoFS.PathNodes.Set("/sub",
		_mdgoFS_getNode(mdgoFS, "/sub", generate__example_sub))
	mdgoFS.PathNodes.Set("/sub/index.html",
		_mdgoFS_getNode(mdgoFS, "/sub/index.html", generate__example_sub_index_html))
	mdgoFS.PathNodes.Set("_internal",
		_mdgoFS_getNode(mdgoFS, "_internal", generate__internal))
	mdgoFS.PathNodes.Set("_internal/.template",
		_mdgoFS_getNode(mdgoFS, "_internal/.template", generate__internal__template))

	mdgoFS.Root = mdgoFS.PathNodes.Get("/")
}
